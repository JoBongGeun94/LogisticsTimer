// App.tsx - SOLID 원칙 완전 준수 버전
import React from 'react';
import { ThemeProvider } from './contexts/ThemeContext';
import { SessionProvider } from './contexts/SessionContext';
import { TimerProvider } from './contexts/TimerContext';
import { ToastProvider } from './contexts/ToastContext';
import { DependencyProvider } from './contexts/DependencyContext';
import { AppShell } from './components/AppShell/AppShell';
import { ErrorBoundary } from './components/ErrorBoundary/ErrorBoundary';

/**
 * 메인 애플리케이션 컴포넌트
 * SRP: 앱의 최상위 구성과 프로바이더 설정만 담당
 * OCP: 새로운 프로바이더 추가 시 기존 코드 수정 불필요
 * LSP: React.FC 인터페이스 완전 준수
 * ISP: 단일 책임만 가지는 최소한의 인터페이스
 * DIP: 구체적 구현체가 아닌 Context 추상화에 의존
 */
const App: React.FC = () => {
  return (
    <ErrorBoundary>
      <DependencyProvider>
        <ThemeProvider>
          <ToastProvider>
            <SessionProvider>
              <TimerProvider>
                <AppShell />
              </TimerProvider>
            </SessionProvider>
          </ToastProvider>
        </ThemeProvider>
      </DependencyProvider>
    </ErrorBoundary>
  );
};

export default App;
